# Generated by Django 5.2.2 on 2025-07-07 22:21

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('renter', 'Renter'), ('owner', 'Owner'), ('admin', 'Admin')], db_index=True, max_length=10)),
                ('mfa_enabled', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile_image_url', models.CharField(blank=True, max_length=300, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('vehicle_license', models.CharField(blank=True, max_length=20, null=True)),
                ('accessibility_needs', models.TextField(blank=True, null=True)),
                ('notification_prefs', models.JSONField(default=dict)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='AdminAction',
            fields=[
                ('action_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('ban', 'Ban'), ('warn', 'Warn'), ('refund', 'Refund'), ('edit', 'Edit'), ('resolve_ticket', 'Resolve Ticket')], db_index=True, max_length=20)),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_actions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_actioned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('canceled', 'Canceled'), ('completed', 'Completed'), ('no-show', 'No Show')], db_index=True, max_length=12)),
                ('amount_total', models.DecimalField(decimal_places=2, max_digits=8)),
                ('cancellation_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('review_left', models.BooleanField(default=False)),
                ('renter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flagged_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketplace.booking')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('booking', 'Booking'), ('payment', 'Payment'), ('cancel', 'Cancel'), ('support', 'Support'), ('alert', 'Alert')], db_index=True, max_length=15)),
                ('content', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParkingSpace',
            fields=[
                ('space_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('description', models.TextField()),
                ('price_per_hour', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price_per_day', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('is_accessible', models.BooleanField(default=False)),
                ('features', models.JSONField(default=dict)),
                ('images', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('unlisted', 'Unlisted'), ('pending', 'Pending'), ('banned', 'Banned')], db_index=True, max_length=10)),
                ('rules', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('availability_schedule', models.JSONField(default=dict)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_spaces', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'parking space',
                'verbose_name_plural': 'parking spaces',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='marketplace.parkingspace'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('disputed', 'Disputed')], db_index=True, max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_ref', models.CharField(max_length=100, unique=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='marketplace.booking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='marketplace.payment'),
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('payment_method_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_brand', models.CharField(max_length=20)),
                ('last4', models.CharField(max_length=4)),
                ('expiry_month', models.IntegerField()),
                ('expiry_year', models.IntegerField()),
                ('is_default', models.BooleanField(default=False)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.paymentmethod'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target_type', models.CharField(choices=[('user', 'User'), ('space', 'Space')], db_index=True, max_length=8)),
                ('target_id', models.UUIDField(db_index=True)),
                ('rating', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_written', to=settings.AUTH_USER_MODEL)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.booking')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_type', models.CharField(choices=[('roadside', 'Roadside'), ('unlock', 'Unlock'), ('other', 'Other')], db_index=True, max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('canceled', 'Canceled')], db_index=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.booking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('ticket_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], db_index=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='marketplace_email_47e182_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='marketplace_role_5ded62_idx'),
        ),
        migrations.AddIndex(
            model_name='adminaction',
            index=models.Index(fields=['action_type'], name='marketplace_action__6b7cf9_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender'], name='marketplace_sender__5a92e8_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['recipient'], name='marketplace_recipie_401105_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sent_at'], name='marketplace_sent_at_9347a3_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user'], name='marketplace_user_id_ae222b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['type'], name='marketplace_type_e18cfe_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['is_read'], name='marketplace_is_read_c6ddca_idx'),
        ),
        migrations.AddIndex(
            model_name='parkingspace',
            index=models.Index(fields=['status'], name='marketplace_status_9d7d72_idx'),
        ),
        migrations.AddIndex(
            model_name='parkingspace',
            index=models.Index(fields=['is_accessible'], name='marketplace_is_acce_548a97_idx'),
        ),
        migrations.AddIndex(
            model_name='parkingspace',
            index=models.Index(fields=['owner'], name='marketplace_owner_i_e34f52_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status'], name='marketplace_status_8943ed_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['created_at'], name='marketplace_created_d40d97_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['renter'], name='marketplace_renter__536385_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['space'], name='marketplace_space_i_10ed74_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['user'], name='marketplace_user_id_9af9cc_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['is_default'], name='marketplace_is_defa_c0169c_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='marketplace_status_965bdd_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user'], name='marketplace_user_id_8171e6_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['target_type', 'target_id'], name='marketplace_target__63e01a_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['status'], name='marketplace_status_78cd56_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['service_type'], name='marketplace_service_25b875_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['user'], name='marketplace_user_id_7531e3_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['status'], name='marketplace_status_4ffd86_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['user'], name='marketplace_user_id_87a480_idx'),
        ),
    ]
